"use strict";(self.webpackChunkmy_tutorial=self.webpackChunkmy_tutorial||[]).push([[625],{1405:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"mcut-tutorial/week-3/3-5","title":"3-5 PC Stream Test","description":"After setup the environment of the gst-plugins-bad-dev project, you are ready to test the streaming sources.","source":"@site/docs/mcut-tutorial/week-3/3-5.md","sourceDirName":"mcut-tutorial/week-3","slug":"/mcut-tutorial/week-3/3-5","permalink":"/zb/docs/mcut-tutorial/week-3/3-5","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mcut-tutorial/week-3/3-5.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"3-5 PC Stream Test","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"3-4 Try a Gstreamer Project","permalink":"/zb/docs/mcut-tutorial/week-3/3-4"},"next":{"title":"3-6 RZ/G2L Stream Test","permalink":"/zb/docs/mcut-tutorial/week-3/3-6"}}');var s=n(4848),r=n(8453);const l={title:"3-5 PC Stream Test",sidebar_position:5},o="3-5 Testing With Various Sources",a={},c=[{value:"1. Test Source",id:"1-test-source",level:2},{value:"2. MP4 File",id:"2-mp4-file",level:2},{value:"3. Network Streaming",id:"3-network-streaming",level:2},{value:"4. USB Camera",id:"4-usb-camera",level:2},{value:"References",id:"references",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"3-5-testing-with-various-sources",children:"3-5 Testing With Various Sources"})}),"\n",(0,s.jsxs)(t.p,{children:["After setup the environment of the ",(0,s.jsx)(t.strong,{children:"gst-plugins-bad-dev"})," project, you are ready to test the streaming sources."]}),"\n",(0,s.jsx)(t.h2,{id:"1-test-source",children:"1. Test Source"}),"\n",(0,s.jsx)(t.p,{children:"Basic test with video test source:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"cd test_env\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc ! video/x-raw,width=1920,height=1080 ! videoconvert ! equirectangular ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(t.admonition,{title:"Attention!",type:"warning",children:(0,s.jsxs)(t.p,{children:["Ensure the execution directory contains ",(0,s.jsx)(t.code,{children:"EquimatX"})," and ",(0,s.jsx)(t.code,{children:"EquimatY"})," files."]})}),"\n",(0,s.jsx)(t.h2,{id:"2-mp4-file",children:"2. MP4 File"}),"\n",(0,s.jsx)(t.p,{children:"To test with mp4 files, use the example below:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'gst-launch-1.0 playbin uri=file:///path/to/video.mp4 video-sink="videoconvert ! equirectangular ! videoconvert ! autovideosink"\n'})}),"\n",(0,s.jsx)(t.p,{children:"Try another example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 filesrc location=endo01.mp4 ! qtdemux ! queue ! avdec_h264 ! videoconvert ! equirectangular ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(t.p,{children:"Still image test:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 filesrc location=image1920.jpg ! decodebin ! imagefreeze ! videoscale ! video/x-raw,width=1920,height=1080 ! videoconvert ! equirectangular ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"gst-launch-1.0 playbin"}),": a high-level, automated pipeline setup"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"gst-launch-1.0 filesrc"}),": a low-level, fully customized pipeline"]}),"\n"]})}),"\n",(0,s.jsx)(t.h2,{id:"3-network-streaming",children:"3. Network Streaming"}),"\n",(0,s.jsx)(t.p,{children:"Now, we will test out network streaming. On the mini PC, run:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 -v udpsrc uri=udp://127.0.0.1:5000 ! application/x-rtp, media=video, payload=96, encoding-name=H264 ! rtph264depay ! avdec_h264 ! videoconvert ! autovideosink\n"})}),"\n",(0,s.jsx)(t.p,{children:"The mini PC will wait for an incoming stream. For the source, we will run the command below on the remote terminal in VS Code."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc ! video/x-raw, width=1920, height=1080 ! videoconvert ! equirectangular ! videoconvert ! x264enc ! rtph264pay config-interval=10 ! udpsink host=127.0.0.1 port=5000\n"})}),"\n",(0,s.jsx)(t.p,{children:"The output will be displayed on the mini PC."}),"\n",(0,s.jsx)(t.h2,{id:"4-usb-camera",children:"4. USB Camera"}),"\n",(0,s.jsx)(t.p,{children:"First, connect a USB camera to mini PC and replace the source in the command as shown below:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"gst-launch-1.0 v4l2src device=/dev/video0 ! videoscale ! video/x-raw, width=1920, height=1080 ! videoconvert ! equirectangular ! videoconvert ! x264enc ! rtph264pay config-interval=10 ! udpsink host=localhost port=5000\n"})}),"\n",(0,s.jsx)(t.p,{children:"The camera output will be displayed."}),"\n",(0,s.jsxs)(t.admonition,{title:"Video4Linux",type:"tip",children:[(0,s.jsxs)(t.p,{children:["To install Video4Linux, run ",(0,s.jsx)(t.code,{children:"sudo apt-get install v4l-utils"}),". A few useful commands include:"]}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"v4l2-ctl --list-devices"}),": list all camera devices"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"v4l2-ctl -d /dev/video0 -D"}),": display driver information"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"v4l2-ctl -d /dev/video0 --list-formats-ext"}),": display all supported image formats"]}),"\n"]})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://gstreamer.freedesktop.org/documentation/installing/index.html?gi-language=c",children:"Installing GStreamer"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://gstreamer.freedesktop.org/documentation/tutorials/basic/hello-world.html?gi-language=c",children:"Basic Tutorial 1: Hello world!"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://gstreamer.freedesktop.org/documentation/tools/gst-launch.html?gi-language=c",children:(0,s.jsx)(t.code,{children:"gst-launch-1.0"})})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://gstreamer.freedesktop.org/documentation/tools/gst-inspect.html?gi-language=c#",children:(0,s.jsx)(t.code,{children:"gst-inspect-1.0"})})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var i=n(6540);const s={},r=i.createContext(s);function l(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);