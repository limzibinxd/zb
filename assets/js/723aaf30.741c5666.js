"use strict";(self.webpackChunkmy_tutorial=self.webpackChunkmy_tutorial||[]).push([[5128],{9123:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"week3/3-1","title":"Develop GStreamer Plugins","description":"Introduction","source":"@site/docs/week3/3-1.md","sourceDirName":"week3","slug":"/week3/3-1","permalink":"/zb/docs/week3/3-1","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/week3/3-1.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Develop GStreamer Plugins","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"2-6 Create Yocto Layer and Recipe","permalink":"/zb/docs/week2/2-6"},"next":{"title":"Try out a Project","permalink":"/zb/docs/week3/3-2"}}');var r=t(4848),i=t(8453);const a={title:"Develop GStreamer Plugins",sidebar_position:1},l=void 0,o={},c=[{value:"Introduction",id:"introduction",level:3},{value:"Step 1: Install GStreamer",id:"step-1-install-gstreamer",level:3},{value:"Step 2: Try &#39;Hello World&#39; Program",id:"step-2-try-hello-world-program",level:3},{value:"Step 3: Check Commands Line Tools",id:"step-3-check-commands-line-tools",level:3},{value:"Step 4: Launch the video",id:"step-4-launch-the-video",level:3}];function d(e){const n={code:"code",h3:"h3",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-install-gstreamer",children:"Step 1: Install GStreamer"}),"\n",(0,r.jsx)(n.p,{children:"To install GStreamer on Ubuntu 22.04, use the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-2-try-hello-world-program",children:"Step 2: Try 'Hello World' Program"}),"\n",(0,r.jsxs)(n.p,{children:["Copy this code into a text file named ",(0,r.jsx)(n.code,{children:"basic-tutorial-1.c"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'#include <gst/gst.h>\n\n#ifdef __APPLE__\n#include <TargetConditionals.h>\n#endif\n\nint\ntutorial_main (int argc, char *argv[])\n{\n  GstElement *pipeline;\n  GstBus *bus;\n  GstMessage *msg;\n\n  /* Initialize GStreamer */\n  gst_init (&argc, &argv);\n\n  /* Build the pipeline */\n  pipeline =\n      gst_parse_launch\n      ("playbin uri=https://gstreamer.freedesktop.org/data/media/sintel_trailer-480p.webm",\n      NULL);\n\n  /* Start playing */\n  gst_element_set_state (pipeline, GST_STATE_PLAYING);\n\n  /* Wait until error or EOS */\n  bus = gst_element_get_bus (pipeline);\n  msg =\n      gst_bus_timed_pop_filtered (bus, GST_CLOCK_TIME_NONE,\n      GST_MESSAGE_ERROR | GST_MESSAGE_EOS);\n\n  /* See next tutorial for proper error message handling/parsing */\n  if (GST_MESSAGE_TYPE (msg) == GST_MESSAGE_ERROR) {\n    g_printerr ("An error occurred! Re-run with the GST_DEBUG=*:WARN "\n        "environment variable set for more details.\\n");\n  }\n\n  /* Free resources */\n  gst_message_unref (msg);\n  gst_object_unref (bus);\n  gst_element_set_state (pipeline, GST_STATE_NULL);\n  gst_object_unref (pipeline);\n  return 0;\n}\n\nint\nmain (int argc, char *argv[])\n{\n#if defined(__APPLE__) && TARGET_OS_MAC && !TARGET_OS_IPHONE\n  return gst_macos_main ((GstMainFunc) tutorial_main, argc, argv, NULL);\n#else\n  return tutorial_main (argc, argv);\n#endif\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Compile the above with the command below,"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt install gcc\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"gcc basic-tutorial-1.c -o basic-tutorial-1 `pkg-config --cflags --libs gstreamer-1.0`\n"})}),"\n",(0,r.jsx)(n.p,{children:"Run the executable and you will see a window pop up, containing a video being played along with audio."}),"\n",(0,r.jsx)(n.h3,{id:"step-3-check-commands-line-tools",children:"Step 3: Check Commands Line Tools"}),"\n",(0,r.jsxs)(n.p,{children:["Command line tools ",(0,r.jsx)(n.code,{children:"gst-inspect-1.0"})," and ",(0,r.jsx)(n.code,{children:"gst-launch-1.0"})," will be used in most of the time for test."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="install open cv"',children:"sudo apt install gstreamer1.0-opencv\n"})}),"\n",(0,r.jsx)(n.p,{children:"The below commands will show the information includes the source module, plugin and element,"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"gst-inspect-1.0 opencv\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"gst-inspect-1.0 geometrictransform\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"gst-inspect-1.0 circle\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-4-launch-the-video",children:"Step 4: Launch the video"}),"\n",(0,r.jsx)(n.p,{children:"Now we can launch the video using commands with different pipeline elements"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc ! autovideosink \n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc pattern=0 ! autovideosink\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc ! video/x-raw, width=1920, height=1080 ! autovideosink  \n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"gst-launch-1.0 videotestsrc ! video/x-raw, width=1920, height=1080 ! videoconvert ! circle ! videoconvert ! autovideosink \n"})}),"\n",(0,r.jsxs)(n.p,{children:["Output of the commands will be like this\n",(0,r.jsx)(n.img,{alt:"alt text",src:t(5172).A+"",width:"720",height:"576"})]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5172:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/image-83c134d3db782ae859c4a6c05423479d.png"},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);