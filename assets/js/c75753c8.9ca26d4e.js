"use strict";(self.webpackChunkmy_tutorial=self.webpackChunkmy_tutorial||[]).push([[8496],{4445:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"mcut-tutorial/week-2/2-5","title":"2-4 Setup Weston & Qt Display","description":"Weston is a display server for Linux. It\u2019s like the middleman between the hardware (like your screen) and the software (like the apps you use). Weston helps manage how things show up on the screen, making sure everything looks right.","source":"@site/docs/mcut-tutorial/week-2/2-5.md","sourceDirName":"mcut-tutorial/week-2","slug":"/mcut-tutorial/week-2/2-5","permalink":"/zb/docs/mcut-tutorial/week-2/2-5","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mcut-tutorial/week-2/2-5.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"2-4 Setup Weston & Qt Display","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"2-4 Prepare Packages & Patches","permalink":"/zb/docs/mcut-tutorial/week-2/2-4"},"next":{"title":"2-5 Boot Up RZ/G2L","permalink":"/zb/docs/mcut-tutorial/week-2/2-6"}}');var s=n(4848),r=n(8453);const a={title:"2-4 Setup Weston & Qt Display",sidebar_position:5},o="2-4 Setup Weston & Qt User Interfaces using Yocto Project",l={},c=[{value:"Step 1: Initialise Build Environment for Yocto",id:"step-1-initialise-build-environment-for-yocto",level:2},{value:"Step 2: Build Images",id:"step-2-build-images",level:2},{value:"Step 3: Check Builded Image File",id:"step-3-check-builded-image-file",level:2}];function d(e){const t={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"2-4-setup-weston--qt-user-interfaces-using-yocto-project",children:"2-4 Setup Weston & Qt User Interfaces using Yocto Project"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Weston"})," is a display server for Linux. It\u2019s like the middleman between the hardware (like your screen) and the software (like the apps you use). Weston helps manage how things show up on the screen, making sure everything looks right."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Qt"})," is a framework for building applications with a graphical user interface (GUI). It helps developers create apps with buttons, windows, and other interactive elements. Think of it like a toolbox for building apps that look and feel nice on your screen."]}),"\n",(0,s.jsx)(t.p,{children:"This tutorial will show you the steps to setup Weston and QT display using Yocto Project."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"step-1-initialise-build-environment-for-yocto",children:"Step 1: Initialise Build Environment for Yocto"}),"\n",(0,s.jsx)(t.p,{children:"Enter back into your container by using:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"docker start rzg2l\ndocker exec -it rzg2l /bin/bash\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Initialize a build using the ",(0,s.jsx)(t.code,{children:"oe-init-build-env"})," script in Poky and set environment variable ",(0,s.jsx)(t.code,{children:"TEMPLATECONF"})," to the below path."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="dir: ~/work/rzg2l/yocto"',children:"TEMPLATECONF=$PWD/meta-renesas/meta-rzg2l/docs/template/conf/ \n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"source poky/oe-init-build-env build\n"})}),"\n",(0,s.jsx)(t.p,{children:"Run the following commands to add necessary layers for AI application to build/conf/bblayers.conf (configration file for layers)."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sudo apt install chrpath cpio diffstat gawk -y\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="layer for graphics"',children:"bitbake-layers add-layer ../meta-rz-features/meta-rz-graphics\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="layer for codecs"',children:"bitbake-layers add-layer ../meta-rz-features/meta-rz-codecs\n"})}),"\n",(0,s.jsx)(t.h2,{id:"step-2-build-images",children:"Step 2: Build Images"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsxs)(t.strong,{children:["For ",(0,s.jsx)(t.code,{children:"Weston Image"})]})," :"]}),"\n",(0,s.jsx)(t.p,{children:"Run the following command to build the weston image."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="dir: ~/work/rzg/yocto/build"',children:"MACHINE=smarc-rzg2l bitbake core-image-weston\n"})}),"\n",(0,s.jsx)(t.p,{children:"Run the following command to build cross compiler installer."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="dir: ~/work/rzg/yocto/build"',children:"MACHINE=smarc-rzg2l bitbake core-image-weston -c populate_sdk\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsxs)(t.strong,{children:["For ",(0,s.jsx)(t.code,{children:"Qt Image"})]})," :"]}),"\n",(0,s.jsx)(t.p,{children:"Run the following command to add the meta-qt5 layer for qt5."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="dir: ~/work/rzg/yocto/build"',children:"bitbake-layers add-layer ../meta-qt5\n"})}),"\n",(0,s.jsx)(t.p,{children:"and in local.conf file, add the following line."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="file: ~/work/rzg/yocto/build/conf/local.conf"',children:'QT_DEMO = "1"\n'})}),"\n",(0,s.jsx)(t.p,{children:"Run the following command to build the qt5 image."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="dir: ~/work/rzg/yocto/build"',children:"MACHINE=smarc-rzg2l bitbake core-image-qt\n"})}),"\n",(0,s.jsx)(t.p,{children:"Run the following command to build cross compiler installer."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'title="dir: ~/work/rzg/yocto/build"',children:"MACHINE=smarc-rzg2l bitbake core-image-qt -c populate_sdk\n"})}),"\n",(0,s.jsx)(t.h2,{id:"step-3-check-builded-image-file",children:"Step 3: Check Builded Image File"}),"\n",(0,s.jsxs)(t.p,{children:["To check the image file,",(0,s.jsx)(t.br,{}),"\n","go to ",(0,s.jsx)(t.code,{children:"~/work/rzg/yocto/build/tmp/deploy/images/smarc-rzg2l/"})]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"image name"}),(0,s.jsx)(t.th,{children:"file name"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"core-image-weston"}),(0,s.jsxs)(t.td,{children:["core-image-weston-smarc-rzg2l.wic.gz ",(0,s.jsx)("br",{})," core-image-weston-smarc-rzg2l.wic.bmap"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"core-image-qt"}),(0,s.jsxs)(t.td,{children:["core-image-qt-smarc-rzg2l.wic.gz ",(0,s.jsx)("br",{})," core-image-qt-smarc-rzg2l.wic.bmap"]})]})]})]})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(6540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);