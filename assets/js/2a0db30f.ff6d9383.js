"use strict";(globalThis.webpackChunkmy_tutorial=globalThis.webpackChunkmy_tutorial||[]).push([[2227],{5137:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"other-tutorial/o1-10","title":"1\ufe0f\u20e3\ud83c\udd7e\ufe0f Self-Hosted GitLab with Docker: A Complete Guide","description":"This guide covers setting up a GitLab server, a CI/CD runner, and GitLab Pages on a local network using Docker.","source":"@site/docs/other-tutorial/o1-10.md","sourceDirName":"other-tutorial","slug":"/other-tutorial/o1-10","permalink":"/zb/docs/other-tutorial/o1-10","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/other-tutorial/o1-10.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"1\ufe0f\u20e3\ud83c\udd7e\ufe0f Self-Hosted GitLab with Docker: A Complete Guide","sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"\ud83c\udd7e\ufe0f9\ufe0f\u20e3 MYZR-RZV2H-EK320 Firmware Flashing Manual","permalink":"/zb/docs/other-tutorial/o1-9"}}');var i=t(4848),s=t(8453);const a={title:"1\ufe0f\u20e3\ud83c\udd7e\ufe0f Self-Hosted GitLab with Docker: A Complete Guide",sidebar_position:10},o=void 0,l={},c=[{value:"\ud83d\udcdd Prerequisites",id:"-prerequisites",level:3},{value:"Part 1: GitLab Server Setup \ud83d\ude80",id:"part-1-gitlab-server-setup-",level:2},{value:"1. Create the <code>docker-compose.yml</code> File",id:"1-create-the-docker-composeyml-file",level:3},{value:"2. Edit Local Host File",id:"2-edit-local-host-file",level:3},{value:"3. Start the Gitlab Server",id:"3-start-the-gitlab-server",level:3},{value:"Part 2: GitLab Runner Setup",id:"part-2-gitlab-runner-setup",level:2},{value:"2. Register the Runner",id:"2-register-the-runner",level:3},{value:"3. Start the Full Stack",id:"3-start-the-full-stack",level:3},{value:"Part 4: Example <strong>.gitlab-ci.yml</strong> for a Web Project",id:"part-4-example-gitlab-ciyml-for-a-web-project",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This guide covers setting up a GitLab server, a CI/CD runner, and GitLab Pages on a local network using Docker."}),"\n",(0,i.jsx)(n.h3,{id:"-prerequisites",children:"\ud83d\udcdd Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A server or Virtual Machine (VM) with a ",(0,i.jsx)(n.strong,{children:"static private IP address"})," (e.g., ",(0,i.jsx)(n.code,{children:"192.168.2.190"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Docker"})," and ",(0,i.jsx)(n.strong,{children:"Docker Compose"})," installed on the VM."]}),"\n",(0,i.jsxs)(n.li,{children:["Chosen ",(0,i.jsx)(n.strong,{children:"hostnames"})," for your services (we will use ",(0,i.jsx)(n.code,{children:"uchi-gitlab"})," and ",(0,i.jsx)(n.code,{children:"uchi-pages"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"part-1-gitlab-server-setup-",children:"Part 1: GitLab Server Setup \ud83d\ude80"}),"\n",(0,i.jsx)(n.p,{children:"This section covers the main GitLab instance. All commands are run on your VM."}),"\n",(0,i.jsxs)(n.h3,{id:"1-create-the-docker-composeyml-file",children:["1. Create the ",(0,i.jsx)(n.code,{children:"docker-compose.yml"})," File"]}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.strong,{children:"Gitlab VM"}),", create a directory for your GitLab setup with a ",(0,i.jsx)(n.code,{children:"docker-compose.yml"})," file inside it."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"version: '3.7'\nservices:\n  gitlab:\n    image: 'gitlab/gitlab-ce:latest'\n    restart: always\n    hostname: 'uchi-gitlab'\n    environment:\n      GITLAB_OMNIBUS_CONFIG: |\n        # Use your custom local hostnames\n        external_url 'http://uchi-gitlab'\n        pages_external_url \"http://uchi-pages\"\n\n        # GitLab Pages Configuration\n        gitlab_pages['enable'] = true\n        gitlab_pages['access_control'] = true\n        gitlab_pages['inplace_chroot'] = true\n    ports:\n      - '80:80'\n      - '2222:22'\n    volumes:\n      - './config:/etc/gitlab'\n      - './logs:/var/log/gitlab'\n      - './data:/var/opt/gitlab'\n    shm_size: '256m'\n\n  gitlab-runner:\n    image: 'gitlab/gitlab-runner:latest'\n    restart: always\n    volumes:\n      - './runner-config:/etc/gitlab-runner'\n      - '/var/run/docker.sock:/var/run/docker.sock'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-edit-local-host-file",children:"2. Edit Local Host File"}),"\n",(0,i.jsxs)(n.p,{children:["On your ",(0,i.jsx)(n.strong,{children:"personal computer"})," (and any other computer that needs to access GitLab), you must edit the hosts file to point your chosen hostnames to the server's IP."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Windows: C:\\Windows\\System32\\drivers\\etc\\hosts"}),"\n",(0,i.jsx)(n.li,{children:"macOS / Linux: /etc/hosts"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Add the following lines, replacing the IP with your server's IP:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"192.168.2.190\tuchi-gitlab\n192.168.2.190\tuchi-pages           # Main Pages Domain\n192.168.2.190   root.uchi-pages      # Example for 'root' user\n192.168.2.190   projects.uchi-pages  # Pages Authentication\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsx)(n.p,{children:"GitLab Pages uses several subdomains. You must add all of them to the hosts file on every computer that needs access."})]}),"\n",(0,i.jsx)(n.h3,{id:"3-start-the-gitlab-server",children:"3. Start the Gitlab Server"}),"\n",(0,i.jsx)(n.p,{children:"Navigate to your GitLab directory in the terminal and run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"docker-compose up"}),": This is the main instruction. It tells Docker to create and start all the containers, networks, and volumes defined in your docker-compose.yml file. If the containers already exist, it will recreate them only if their configuration or image has changed."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"-d"}),": This flag stands for detached mode. It means that once the containers start, your terminal is freed up, and the containers will continue running in the background. Without this flag, your terminal would be attached to the containers' logs, and closing the terminal would stop them."]})]}),"\n",(0,i.jsxs)(n.p,{children:["Your GitLab instance will be available at ",(0,i.jsx)(n.a,{href:"http://uchi-gitlab",children:"http://uchi-gitlab"})," after a few minutes."]}),"\n",(0,i.jsx)(n.h2,{id:"part-2-gitlab-runner-setup",children:"Part 2: GitLab Runner Setup"}),"\n",(0,i.jsx)(n.p,{children:"This sets up a CI/CD runner using the Docker Executor, which is the most flexible method."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# (Keep the 'gitlab' service from above)\n  gitlab-runner:\n    image: 'gitlab/gitlab-runner:latest'\n    restart: always\n    volumes:\n      - './runner-config:/etc/gitlab-runner'\n      - '/var/run/docker.sock:/var/run/docker.sock'\n"})}),"\n",(0,i.jsx)(n.p,{children:"The volume /var/run/docker.sock is critical. It allows the runner to start other Docker containers to run your jobs."}),"\n",(0,i.jsx)(n.h3,{id:"2-register-the-runner",children:"2. Register the Runner"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Get the Registration Token: In GitLab, go to Admin Area > CI/CD > Runners and copy the token."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Run the Registration Command:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose run --rm gitlab-runner register\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Answer the Prompts:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["GitLab instance URL: ",(0,i.jsx)(n.a,{href:"http://uchi-gitlab",children:"http://uchi-gitlab"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Registration token: [PASTE_YOUR_TOKEN]"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Description: My Docker Runner"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Tags: docker,linux"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Executor: docker"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Default Docker image: node:20-alpine (A good default for web projects)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-start-the-full-stack",children:"3. Start the Full Stack"}),"\n",(0,i.jsx)(n.p,{children:"Run the command to start both GitLab and the new runner."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"part-4-example-gitlab-ciyml-for-a-web-project",children:["Part 4: Example ",(0,i.jsx)(n.strong,{children:".gitlab-ci.yml"})," for a Web Project"]}),"\n",(0,i.jsx)(n.p,{children:"This is a sample CI/CD file for a Docusaurus or other Node.js-based static site. Place it in the root of your repository."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Caching node_modules is a great way to speed up future pipelines.\ncache:\n  paths:\n    - node_modules/\n\n# The 'pages' job is required for GitLab Pages deployment.\npages:\n  stage: deploy\n\n  # This tag must match your shell runner.\n  tags:\n    - shell\n\n  script:\n    - echo \"Installing dependencies...\"\n    - yarn install\n\n    - echo \"Building Docusaurus site...\"\n    # 1. The standard command to build a Docusaurus site.\n    - yarn build\n\n    - echo \"Preparing files for GitLab Pages...\"\n    # 2. Rename the 'build' output folder to 'public'.\n    - mv build public\n\n  artifacts:\n    # This tells GitLab to take the 'public' directory and serve it as your website.\n    paths:\n      - public\n\n  # This ensures the site only deploys when you push to the 'main' branch.\n  only:\n    - main\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);